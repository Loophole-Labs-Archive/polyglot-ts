(string) (len=8365) "\n// Code generated by polyglot-ts v0.4.0, DO NOT EDIT.\n// source: nested_array.proto\n\n\n\nimport { Kind,decodeArray,decodeBoolean,decodeInt32,decodeInt64,encodeArray,encodeBoolean,encodeInt32,encodeInt64,} from \"polyglot-ts\"\n\n\n\n\n\n    \n    \n    \n        \n        \n            \n    \n        \n        \n            \n    \n    export class IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner {\n        constructor(\n        a: number,\n        b: boolean,\n        ) {\n            this._a = a\n            this._b = b\n            }\n\n        private _a: number\n\n            get a(): number {\n                return this._a\n            }\n\n            set a(a: number) {\n                this._a = a\n            }\n            \n        private _b: boolean\n\n            get b(): boolean {\n                return this._b\n            }\n\n            set b(b: boolean) {\n                this._b = b\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n        encoded = encodeInt64(encoded, this.a)\n        encoded = encodeBoolean(encoded, this.b)\n\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner} {\n        let decoded = buf\n        \n        \n            let aTemp = decodeInt64(decoded)\n                decoded = aTemp.buf\n            \n            let bTemp = decodeBoolean(decoded)\n                decoded = bTemp.buf\n            \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner(\n            aTemp.value,\n            bTemp.value,\n            )}\n    }\n\n    } \n\n        \n    \n    export class IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA {\n        constructor(\n        a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner[],\n        ) {\n            this._a = a\n            }\n\n        private _a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner[]\n\n            get a(): IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner[] {\n                return this._a\n            }\n\n            set a(a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner[]) {\n                this._a = a\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n\n        \n    encoded = encodeArray(encoded, this._a.length, Kind.Any)\n        this._a.forEach((field) => {\n            encoded = field.encode(encoded)\n        })\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA} {\n        let decoded = buf\n        \n        \n            let a = decodeArray(decoded)\n            decoded = a.buf\n            const aTemp: { value: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner[] } = { value: [] }\n            for (let i = 0; i < a.size; i++) {\n                let element = IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAAInner.decode(decoded)\n                    decoded = element.buf\n                aTemp.value.push(element.value)\n            }\n        \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA(\n            aTemp.value,\n            )}\n    }\n\n    } \n\n        \n    \n        \n        \n            \n    \n        \n        \n            \n    \n    export class IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner {\n        constructor(\n        a: number,\n        b: boolean,\n        ) {\n            this._a = a\n            this._b = b\n            }\n\n        private _a: number\n\n            get a(): number {\n                return this._a\n            }\n\n            set a(a: number) {\n                this._a = a\n            }\n            \n        private _b: boolean\n\n            get b(): boolean {\n                return this._b\n            }\n\n            set b(b: boolean) {\n                this._b = b\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n        encoded = encodeInt32(encoded, this.a)\n        encoded = encodeBoolean(encoded, this.b)\n\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner} {\n        let decoded = buf\n        \n        \n            let aTemp = decodeInt32(decoded)\n                decoded = aTemp.buf\n            \n            let bTemp = decodeBoolean(decoded)\n                decoded = bTemp.buf\n            \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner(\n            aTemp.value,\n            bTemp.value,\n            )}\n    }\n\n    } \n\n        \n    \n    export class IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB {\n        constructor(\n        a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner,\n        ) {\n            this._a = a\n            }\n\n        private _a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner\n\n            get a(): IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner {\n                return this._a\n            }\n\n            set a(a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner) {\n                this._a = a\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n\n        \n    encoded = this._a.encode(encoded);\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB} {\n        let decoded = buf\n        \n        \n            let aTemp = IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBBInner.decode(decoded)\n                decoded = aTemp.buf\n            \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB(\n            aTemp.value,\n            )}\n    }\n\n    } \n\n        \n    \n    export class IoLoopholelabsPolyglotTestDataNestedArrayOuter {\n        constructor(\n        a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA,\n        b: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB[],\n        ) {\n            this._a = a\n            this._b = b\n            }\n\n        private _a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA\n\n            get a(): IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA {\n                return this._a\n            }\n\n            set a(a: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA) {\n                this._a = a\n            }\n            \n        private _b: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB[]\n\n            get b(): IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB[] {\n                return this._b\n            }\n\n            set b(b: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB[]) {\n                this._b = b\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n\n        \n    encoded = encodeArray(encoded, this._b.length, Kind.Any)\n        this._b.forEach((field) => {\n            encoded = field.encode(encoded)\n        })\n        \n    encoded = this._a.encode(encoded);\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataNestedArrayOuter} {\n        let decoded = buf\n        \n        \n            let b = decodeArray(decoded)\n            decoded = b.buf\n            const bTemp: { value: IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB[] } = { value: [] }\n            for (let i = 0; i < b.size; i++) {\n                let element = IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleBB.decode(decoded)\n                    decoded = element.buf\n                bTemp.value.push(element.value)\n            }\n        \n            let aTemp = IoLoopholelabsPolyglotTestDataNestedArrayOuterMiddleAA.decode(decoded)\n                decoded = aTemp.buf\n            \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataNestedArrayOuter(\n            bTemp.value,\n            aTemp.value,\n            )}\n    }\n\n    } \n\n\n\n"
