(string) (len=1541) "\n// Code generated by polyglot-ts v0.4.0, DO NOT EDIT.\n// source: enum.proto\n\n\n\nimport { decodeUint32,encodeUint32,} from \"polyglot-ts\"\n\n\nenum IoLoopholelabsPolyglotTestDataEnmMessageType {\n    MESSAGE_TYPE_A = 0,\n    MESSAGE_TYPE_B = 1,\n    MESSAGE_TYPE_C = 2,\n    }\n\n\n\n\n\n    \n    \n    \n    export class IoLoopholelabsPolyglotTestDataEnmExampleMessage {\n        constructor(\n        type: IoLoopholelabsPolyglotTestDataEnmMessageType,\n        ) {\n            this._type = type\n            }\n\n        private _type: IoLoopholelabsPolyglotTestDataEnmMessageType\n\n            get type(): IoLoopholelabsPolyglotTestDataEnmMessageType {\n                return this._type\n            }\n\n            set type(type: IoLoopholelabsPolyglotTestDataEnmMessageType) {\n                this._type = type\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n        encoded = encodeUint32(encoded, this.type as number)\n\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataEnmExampleMessage} {\n        let decoded = buf\n        \n        \n            let typeU32 = decodeUint32(decoded)\n                const typeTemp = { value: typeU32 as IoLoopholelabsPolyglotTestDataEnmMessageType }\n                decoded = typeU32.buf\n            \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataEnmExampleMessage(\n            typeTemp.value,\n            )}\n    }\n\n    } \n\n\n\n"
