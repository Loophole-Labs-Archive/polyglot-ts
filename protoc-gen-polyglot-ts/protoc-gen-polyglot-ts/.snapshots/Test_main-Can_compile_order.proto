(string) (len=5292) "\n// Code generated by polyglot-ts v0.4.0, DO NOT EDIT.\n// source: order.proto\n\n\n\nimport { Kind,decodeArray,decodeMap,decodeString,decodeUint32,encodeArray,encodeMap,encodeString,encodeUint32,} from \"polyglot-ts\"\n\n\nenum IoLoopholelabsPolyglotTestDataOrderMessageType {\n    MESSAGE_TYPE_A = 0,\n    MESSAGE_TYPE_B = 1,\n    MESSAGE_TYPE_C = 2,\n    }\n\n\n\n\n\n    \n    \n    \n        \n        \n    \n    export class IoLoopholelabsPolyglotTestDataOrderExampleMessage {\n        constructor(\n        e: IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage,\n        d: Map<string, string>,\n        c: string[],\n        a: string,\n        b: IoLoopholelabsPolyglotTestDataOrderMessageType,\n        ) {\n            this._e = e\n            this._d = d\n            this._c = c\n            this._a = a\n            this._b = b\n            }\n\n        private _e: IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage\n\n            get e(): IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage {\n                return this._e\n            }\n\n            set e(e: IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage) {\n                this._e = e\n            }\n            \n        private _d: Map<string, string>\n\n            get d(): Map<string, string> {\n                return this._d\n            }\n\n            set d(d: Map<string, string>) {\n                this._d = d\n            }\n            \n        private _c: string[]\n\n            get c(): string[] {\n                return this._c\n            }\n\n            set c(c: string[]) {\n                this._c = c\n            }\n            \n        private _a: string\n\n            get a(): string {\n                return this._a\n            }\n\n            set a(a: string) {\n                this._a = a\n            }\n            \n        private _b: IoLoopholelabsPolyglotTestDataOrderMessageType\n\n            get b(): IoLoopholelabsPolyglotTestDataOrderMessageType {\n                return this._b\n            }\n\n            set b(b: IoLoopholelabsPolyglotTestDataOrderMessageType) {\n                this._b = b\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n        encoded = encodeString(encoded, this.a)\n        encoded = encodeUint32(encoded, this.b as number)\n\n        \n    encoded = encodeArray(this._c.length, Kind.String)\n        this._c.forEach((field) => {\n            encoded = encodeString(encoded, field)\n        })\n        \n    encoded = this._e.encode(encoded);\n        encoded = encodeMap(encoded, this._d.size, Kind.String, Kind.String)\n            this._d.forEach((v, k) => {\n            encoded = encodeString(encoded, k)\n                encoded = encodeString(encoded, v)\n                })\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataOrderExampleMessage} {\n        let decoded = buf\n        \n        \n            let c = decodeArray(decoded)\n            decoded = c.buf\n            const cTemp: { value: string[] } = { value: [] }\n            for (let i = 0; i < c.size; i++) {\n                let element = decodeString(decoded)\n                    decoded = element.buf\n                cTemp.value.push(element.value)\n            }\n        \n            let eTemp = IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage.decode(decoded)\n                decoded = eTemp.buf\n            \n            \n\n\nlet d = decodeMap(decoded)\ndecoded = d.buf\nconst dTemp: { value: Map<string,string> } = { value: new Map() }\nfor (let i = 0; i < d.size; i++) {\n    let key = decodeString(decoded)\n        decoded = key.buf\n    \n\n    let value = decodeString(decoded)\n        decoded = value.buf\n    \n\n    d.value.set(key, value)\n}\n\n            let aTemp = decodeString(decoded)\n                decoded = aTemp.buf\n            \n            let bU32 = decodeUint32(decoded)\n                const bTemp = { value: bU32 as IoLoopholelabsPolyglotTestDataOrderMessageType }\n                decoded = bU32.buf\n            \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataOrderExampleMessage(\n            aTemp.value,\n            bTemp.value,\n            cTemp.value,\n            eTemp.value,\n            dTemp.value,\n            )}\n    }\n\n    } \n\n\n    \n    \n    \n    export class IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage {\n        constructor(\n        a: string,\n        ) {\n            this._a = a\n            }\n\n        private _a: string\n\n            get a(): string {\n                return this._a\n            }\n\n            set a(a: string) {\n                this._a = a\n            }\n            \n        \n    encode(buf: Uint8Array): Uint8Array {\n        let encoded = buf\n        \n        \n        encoded = encodeString(encoded, this.a)\n\n        \n        \n        return encoded\n    }\n\n\n        \n    static decode(buf: Uint8Array): { buf: Uint8Array, value: IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage} {\n        let decoded = buf\n        \n        \n            let aTemp = decodeString(decoded)\n                decoded = aTemp.buf\n            \n\n        return { buf: decoded, value: new IoLoopholelabsPolyglotTestDataOrderSecondExampleMessage(\n            aTemp.value,\n            )}\n    }\n\n    } \n\n\n\n"
